package library.book;

import com.sun.istack.NotNull;
import library.users.User;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.*;

@Entity
@Table(name = "BOOK",
uniqueConstraints = @UniqueConstraint(columnNames = "ISBN"))
public class Book {

    private @Id @GeneratedValue @Column(name = "BOOK_ID") Integer book_id;
    private @NotNull Integer ISBN;
    private String title;
    private String author;
    private String genere;
    private Integer publicationYear;
    private Integer avaiableCopies; //Copie disponibili
    private  Float price; //Prezzo noleggio

    @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.PERSIST, mappedBy = "rentedBooks")
    private List<User> users = new ArrayList<>(); //utente che attualmente ha noleggiato il libro

    public Book(){}

    public Book(Integer ISBN, String title, String author, String genere, Integer publicationYear, Integer avaiableCopies, Float price) {
        this.ISBN = ISBN;
        this.title = title;
        this.author = author;
        this.genere = genere;
        this.publicationYear = publicationYear;
        this.avaiableCopies = avaiableCopies;
        this.price = price;
    }


    public Integer getId() {
        return book_id;
    }

    public void setId(Integer id) {
        book_id = id;
    }

    public Integer getISBN() {
        return ISBN;
    }

    public void setISBN(Integer ISBN) {
        this.ISBN = ISBN;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public String getGenere() {
        return genere;
    }

    public void setGenere(String genere) {
        this.genere = genere;
    }

    public Integer getPublicationYear() {
        return publicationYear;
    }

    public void setPublicationYear(Integer publicationYear) {
        this.publicationYear = publicationYear;
    }

    public  List<User> getUsers(){
        return users;
    }

    public  void setUsers(List<User> users) {
        this.users = users;
    }

    public Integer getAvaiableCopies() {
        return avaiableCopies;
    }

    public void setAvaiableCopies(Integer avaiableCopies) {
        this.avaiableCopies = avaiableCopies;
    }

    public Float getPrice() {
        return price;
    }

    public void setPrice(Float price) {
        this.price = price;
    }

    @Override
    public boolean equals(Object o) {

        if (!(o instanceof Book))
            return false;
        Book book = (Book) o;
        return ISBN == book.ISBN && title.equals(book.title)
                && author.equals(book.author) && genere.equals(book.genere)
                && this.publicationYear == book.publicationYear
                && this.price == book.price;
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.ISBN, this.title, this.author, this.genere, this.publicationYear, this.price);
    }

    @Override
    public String toString() {
        return "Book [ISBN=" + ISBN + ", titolo=" + title + ", autore=" + author + ", genere=" + genere
                + ", annoPubblicazione=" + publicationYear + " user= " + users +"]";
    }

}
